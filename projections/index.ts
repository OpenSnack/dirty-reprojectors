import {
    geoAlbers,
    geoAlbersUsa,
    geoAzimuthalEqualArea,
    geoAzimuthalEquidistant,
    geoConicConformal,
    geoConicEqualArea,
    geoConicEquidistant,
    geoEqualEarth,
    geoGnomonic,
    geoMercator,
    geoNaturalEarth1,
    geoOrthographic,
    geoStereographic,
    geoTransverseMercator,
} from 'd3-geo';
import type { GeoProjection } from 'd3-geo';
import {
    geoAiry,
    geoAitoff,
    geoArmadillo,
    geoAugust,
    geoBaker,
    geoBerghaus,
    geoBertin1953,
    geoBoggs,
    geoBonne,
    geoBottomley,
    geoBromley,
    geoChamberlin,
    geoCollignon,
    geoCraig,
    geoCraster,
    geoCylindricalEqualArea,
    geoCylindricalStereographic,
    geoEckert1,
    geoEckert2,
    geoEckert3,
    geoEckert4,
    geoEckert5,
    geoEckert6,
    geoEisenlohr,
    geoFahey,
    geoFoucaut,
    geoFoucautSinusoidal,
    geoGilbert,
    geoGingery,
    geoGinzburg4,
    geoGinzburg5,
    geoGinzburg6,
    geoGinzburg8,
    geoGinzburg9,
    geoGringorten,
    geoGuyou,
    geoHammer,
    geoHammerRetroazimuthal,
    geoHealpix,
    geoHill,
    geoHomolosine,
    geoHufnagel,
    geoHyperelliptical,
    geoInterrupt,
    geoInterruptedBoggs,
    geoInterruptedHomolosine,
    geoInterruptedMollweide,
    geoInterruptedMollweideHemispheres,
    geoInterruptedSinuMollweide,
    geoInterruptedSinusoidal,
    geoKavrayskiy7,
    geoLagrange,
    geoLarrivee,
    geoLaskowski,
    geoLittrow,
    geoLoximuthal,
    geoMiller,
    geoModifiedStereographic,
    geoMollweide,
    geoMtFlatPolarParabolic,
    geoMtFlatPolarQuartic,
    geoMtFlatPolarSinusoidal,
    geoNaturalEarth2,
    geoNellHammer,
    geoInterruptedQuarticAuthalic,
    geoNicolosi,
    geoPatterson,
    geoPolyconic,
    geoPolyhedral,
    geoPolyhedralButterfly,
    geoPolyhedralCollignon,
    geoPolyhedralWaterman,
    geoGringortenQuincuncial,
    geoPeirceQuincuncial,
    geoQuincuncial,
    geoRectangularPolyconic,
    geoRobinson,
    geoSatellite,
    geoSinuMollweide,
    geoSinusoidal,
    geoTimes,
    geoTwoPointAzimuthal,
    geoTwoPointEquidistant,
    geoVanDerGrinten,
    geoVanDerGrinten2,
    geoVanDerGrinten3,
    geoVanDerGrinten4,
    geoWagner,
    geoWagner4,
    geoWagner6,
    geoWiechel,
    geoWinkel3,
} from 'd3-geo-projection';
import geoAlbersUsaPr from './albers-usa-pr';
import geoAlbersUsaTerritories from './albers-usa-territories';

const R = 6378137.0 // radius of Earth in meters

const projections: { [key: string]: GeoProjection } = {};
const geoProjs = {
    albers: geoAlbers,
    albersUsa: geoAlbersUsa,
    azimuthalEqualArea: geoAzimuthalEqualArea,
    azimuthalEquidistant: geoAzimuthalEquidistant,
    conicConformal: geoConicConformal,
    conicEqualArea: geoConicEqualArea,
    conicEquidistant: geoConicEquidistant,
    equalEarth: geoEqualEarth,
    gnomonic: geoGnomonic,
    mercator: geoMercator,
    naturalEarth1: geoNaturalEarth1,
    orthographic: geoOrthographic,
    stereographic: geoStereographic,
    transverseMercator: geoTransverseMercator,
};

const geoProjProjs = {
    airy: geoAiry,
    aitoff: geoAitoff,
    armadillo: geoArmadillo,
    august: geoAugust,
    baker: geoBaker,
    berghaus: geoBerghaus,
    // bertin1953: geoBertin1953,
    boggs: geoBoggs,
    bonne: geoBonne,
    bottomley: geoBottomley,
    bromley: geoBromley,
    // chamberlin: geoChamberlin,
    collignon: geoCollignon,
    craig: geoCraig,
    craster: geoCraster,
    cylindricalEqualArea: geoCylindricalEqualArea,
    cylindricalStereographic: geoCylindricalStereographic,
    eckert1: geoEckert1,
    eckert2: geoEckert2,
    eckert3: geoEckert3,
    eckert4: geoEckert4,
    eckert5: geoEckert5,
    eckert6: geoEckert6,
    eisenlohr: geoEisenlohr,
    fahey: geoFahey,
    foucaut: geoFoucaut,
    // foucautSinusoidal: geoFoucautSinusoidal,
    gilbert: geoGilbert,
    gingery: geoGingery,
    ginzburg4: geoGinzburg4,
    ginzburg5: geoGinzburg5,
    ginzburg6: geoGinzburg6,
    ginzburg8: geoGinzburg8,
    ginzburg9: geoGinzburg9,
    gringorten: geoGringorten,
    guyou: geoGuyou,
    hammer: geoHammer,
    hammerRetroazimuthal: geoHammerRetroazimuthal,
    healpix: geoHealpix,
    hill: geoHill,
    homolosine: geoHomolosine,
    // hufnagel: geoHufnagel,
    // hyperelliptical: geoHyperelliptical,
    // interrupt: geoInterrupt,
    interruptedBoggs: geoInterruptedBoggs,
    interruptedHomolosine: geoInterruptedHomolosine,
    interruptedMollweide: geoInterruptedMollweide,
    interruptedMollweideHemispheres: geoInterruptedMollweideHemispheres,
    // interruptedQuarticAuthalic: geoInterruptedQuarticAuthalic,
    interruptedSinuMollweide: geoInterruptedSinuMollweide,
    interruptedSinusoidal: geoInterruptedSinusoidal,
    kavrayskiy7: geoKavrayskiy7,
    lagrange: geoLagrange,
    larrivee: geoLarrivee,
    laskowski: geoLaskowski,
    littrow: geoLittrow,
    loximuthal: geoLoximuthal,
    miller: geoMiller,
    // modifiedStereographic: geoModifiedStereographic,
    mollweide: geoMollweide,
    mtFlatPolarParabolic: geoMtFlatPolarParabolic,
    mtFlatPolarQuartic: geoMtFlatPolarQuartic,
    mtFlatPolarSinusoidal: geoMtFlatPolarSinusoidal,
    // naturalEarth2: geoNaturalEarth2,
    nellHammer: geoNellHammer,
    // nicolosi: geoNicolosi,
    patterson: geoPatterson,
    polyconic: geoPolyconic,
    // polyhedral: geoPolyhedral,
    polyhedralButterfly: geoPolyhedralButterfly,
    polyhedralCollignon: geoPolyhedralCollignon,
    polyhedralWaterman: geoPolyhedralWaterman,
    gringortenQuincuncial: geoGringortenQuincuncial,
    peirceQuincuncial: geoPeirceQuincuncial,
    // quincuncial: geoQuincuncial,
    rectangularPolyconic: geoRectangularPolyconic,
    robinson: geoRobinson,
    satellite: geoSatellite,
    sinuMollweide: geoSinuMollweide,
    sinusoidal: geoSinusoidal,
    times: geoTimes,
    // twoPointAzimuthal: geoTwoPointAzimuthal,
    // twoPointEquidistant: geoTwoPointEquidistant,
    vanDerGrinten: geoVanDerGrinten,
    vanDerGrinten2: geoVanDerGrinten2,
    vanDerGrinten3: geoVanDerGrinten3,
    vanDerGrinten4: geoVanDerGrinten4,
    // wagner: geoWagner,
    wagner4: geoWagner4,
    wagner6: geoWagner6,
    wiechel: geoWiechel,
    winkel3: geoWinkel3,
};

// from us - these definitely don't satisfy GeoProjection
// but they're good enough to run the tool
const ourProjs = {
    albersUsaPr: geoAlbersUsaPr,
    albersUsaTerritories: geoAlbersUsaTerritories,
};

Object.keys(geoProjs).forEach(proj => { projections[proj] = geoProjs[proj]().translate([0, 0]).scale(R); });
Object.keys(geoProjProjs).forEach(proj => { projections[proj] = geoProjProjs[proj]().translate([0, 0]).scale(R); });
Object.keys(ourProjs).forEach(proj => { projections[proj] = ourProjs[proj]().translate([0, 0]).scale(R); });

export default projections;
